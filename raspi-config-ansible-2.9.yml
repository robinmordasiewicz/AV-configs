---
- name: "Raspberry PI4 Video Mixer Automation"
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  vars_prompt:

    - name: PIUSER
      prompt: "Username:                   "
      private: no
      default: "{{ lookup('env','USER', errors='ignore') | default('pi')}}"

    - name: PIPASSWORD
      prompt: "Password:            "
      private: no
      default: "raspberry"

    - name: HOSTNAME
      prompt: "Hostname:          "
      private: no
      default: "{{ lookup('pipe','raspi-config nonint get_hostname', errors='ignore') }}"

    - name: LOCALE
      prompt: "Language Code:     "
      private: no
      default: "{{ lookup('env','LANG') | default('en_US.UTF-8')}}"

# ROBIN - need to add in music player over HDMI option
#       - for now lets just comment this out and statically assign AUDIOOUT in vars:
#
#    - name: AUDIOOUT
#      prompt: "Default audio output Headphone or HDMI: "
#      private: no
#      default: "{{ lookup('pipe','sudo -u pi amixer cget numid=1 | grep \"^numid\" | grep -o \"Headphone\\|HDMI\"', errors='ignore') | default('Headphone', true)  }}"

    - name: WIFIDESIREDENABLED
      prompt: "Enable WIFI:               "
      private: no
      default: "{{ 'no' if (lookup('pipe','cat /boot/config.txt | grep \"^dtoverlay=disable-wifi$\"', errors='ignore')) else 'yes' }}"

    - name: BLUETOOTHDESIREDENABLED
      prompt: "Enable Bluetooth:          "
      private: no
      default: "{{ 'no' if (lookup('pipe','cat /boot/config.txt | grep \"^dtoverlay=disable-bt$\"', errors='ignore')) else 'yes' }}"

  vars:
    MEMSPLIT: "320"
    AUDIOOUT: "Headphone"
    HDMI_GROUP: 1
    HDMI_MOD: 34
    GITHUBUSERNAME: "robinmordasiewicz"
    GITHUBPROJECT: "AV-raspi-config"
    developer: true
    raspiconfig:
      ssh: 0
      vnc: 1
      i2c: 1
      serial: 1
      onewire: 1
      rgpio: 1
      spi: 1
      boot_wait: 0
      overscan: 1
      camera: 1
      pixdub: 1
      blanking: 1
  
  handlers:
        
    - name: reboot
      command: "shutdown -r now +1"

    - name: Restart mpd
      systemd:
        name: mpd
        state: restarted
      listen: restartmpd
      tags:
        - music-mpd

    - name: restart-companion
      systemd:
        name: companion
        enabled: yes
        daemon_reload: yes
        state: restarted
      tags:
        - companion-db
        - companion-config
        - companion

    - name: restart-cpufreq
      systemd:
        name: cpufrequtils
        enabled: yes
        state: restarted
      tags:
        - optimizations

    - name: restart-omxd
      systemd:
        name: omxd
        enabled: yes
        state: restarted
      tags:
        - omx

    - name: restart-fileshare
      systemd:
        name: smbd
        state: restarted
      tags:
         - filesharing

    - name: restart-avahi
      systemd:
        name: avahi-daemon
        state: restarted
        enabled: yes
      tags:
         - filesharing

  tasks:

    - name: Remove libpam-chksshpwd
      apt:
        pkg: libpam-chksshpwd
        state: absent
      when: developer

    - name: Add the user 'pi'
      user:
        name: pi
        group: pi
        groups: sudo
        append: yes
      tags:
        - piuser

    - name: Passwordless sudo for pi user
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo.+ALL=.+$'
        line: '%sudo  ALL=(ALL:ALL) NOPASSWD: ALL'
        validate: /usr/sbin/visudo -cf %s
      tags:
        - piuser

    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
      tags:
        - update

    - name: Upgrade apt packages
      apt: upgrade=dist force_apt_get=yes
      tags:
        - update

    - name: Firmware
      apt:
        install_recommends: yes
        pkg:
        - rpi-eeprom
        - rpi-eeprom-images
      tags:
        - update

    - name: Required Software
      apt:
        pkg:
          - git
      tags:
        - update

    - name: raspi-config defaults
      command: "raspi-config nonint do_{{ item.key }} {{ item.value }}"
      ignore_errors: yes
      notify: reboot
      when: lookup('pipe','raspi-config nonint get_{{ item.key }}') != "{{ item.value }}"
      with_dict: "{{ raspiconfig }}"
      register: returnvalue
      changed_when: "returnvalue"
      tags:
        - raspi-config-loop
        - raspi-config

    - name: Set Hostname {{ HOSTNAME }}
      command: "raspi-config nonint do_hostname {{ HOSTNAME }}"
      notify: reboot
      when: lookup('pipe','raspi-config nonint get_hostname') != HOSTNAME
      tags:
        - raspi-config

    - name: Set Boot behaviour
      command: "raspi-config nonint do_boot_behaviour B1"
      notify: reboot
      when: ( lookup('pipe','raspi-config nonint get_boot_cli') != "0" ) or
            ( lookup('pipe','raspi-config nonint get_autologin') != "1" )
      tags:
        - raspi-config

    - name: Get region
      uri:
        url: https://freegeoip.app/json/
        body_format: json
        method: GET
        headers:
          Content-Type: application/json
          Accept: application/json
        return_content: yes
      register: region
      changed_when: False
      tags:
        - raspi-config-region
        - raspi-config

    - name: Set timezone {{ region.json.time_zone }}
      command: "raspi-config nonint do_change_timezone {{ region.json.time_zone }}"
      notify: reboot
      when: lookup('file', '/etc/timezone', errors='ignore') != region.json.time_zone
      tags:
        - raspi-config-region
        - raspi-config

    - name: Set locale
      command: "raspi-config nonint do_change_locale {{ LOCALE }}"
      notify: reboot
      when: lookup('env','LANG') != LOCALE
      tags:
        - raspi-config-region
        - raspi-config

    - name: Get Bluetooth state
      shell: if [ `cat /boot/config.txt | grep -q "^dtoverlay=disable-bt$"` ]; then echo yes; else echo no; fi
      args:
        executable: /bin/bash
      register: BLUETOOTHDISABLED
      changed_when: False
      tags:
        - raspi-config-bluetooth
        - raspi-config

    - name: Get Bluetooth NEW State
      shell: if [ "{{ BLUETOOTHDESIREDENABLED }}" == "yes" ]; then echo absent; else echo present; fi
      args:
        executable: /bin/bash
      register: BLUETOOTHSTATE
      changed_when: False
      tags:
        - raspi-config-bluetooth
        - raspi-config

    - name: Set Bluetooth {{ 'enabled' if ( "{{ BLUETOOTHDESIREDENABLED }}" == "yes"  ) else 'disabled' }}
      lineinfile:
        path: /boot/config.txt
        insertafter: '^#[all]'
        line: 'dtoverlay=disable-bt'
        regexp: "^#?dtoverlay=disable-bt"
        state: "{{ BLUETOOTHSTATE.stdout }}"
      notify: reboot
      tags:
        - raspi-config-bluetooth
        - raspi-config

    - name: Set Bluetooth HCIUART {{ 'enabled' if ( "{{ BLUETOOTHDESIREDENABLED }}" == "yes"  ) else 'disabled' }}
      systemd:
        name: hciuart
        enabled: "{{ BLUETOOTHDESIREDENABLED }}"
      notify: reboot
      tags:
        - raspi-config-bluetooth
        - raspi-config

    - name: Get WIFI Current State
      shell: if [ `cat /boot/config.txt | grep -q "^dtoverlay=disable-wifi$"` ]; then echo yes; else echo no; fi
      args:
        executable: /bin/bash
      register: WIFIDISABLED
      changed_when: False
      tags:
        - raspi-config-wifi
        - raspi-config

    - name: Get WIFI NEW State
      shell: if [ "{{ WIFIDESIREDENABLED }}" == "yes" ]; then echo absent; else echo present; fi
      args:
        executable: /bin/bash
      register: NEWSTATE
      changed_when: False
      tags:
        - raspi-config-wifi
        - raspi-config
    
    - name: Set WIFI {{ 'enabled' if ( "{{ WIFIDESIREDENABLED }}" == "yes"  ) else 'disabled' }}
      lineinfile:
        path: /boot/config.txt
        insertafter: '^#[all]'
        line: 'dtoverlay=disable-wifi'
        regexp: "^#?dtoverlay=disable-wifi"
        state: "{{ NEWSTATE.stdout }}"
      notify: reboot
      tags:
        - raspi-config-wifi
        - raspi-config

    #N2 Wi-fi
    #- name: Set WiFi credentials
    #command: "raspi-config nonint do_wifi_ssid_passphrase {{ SSID }} {{ PASSPHRASE }}"
    
    - name: Set WiFi country {{ region.json.country_code }}
      command: "raspi-config nonint do_wifi_country {{ region.json.country_code }}"
      notify: reboot
      when: ( lookup('pipe','raspi-config nonint get_wifi_country', errors='ignore') != region.json.country_code ) and 
            ( WIFIDESIREDENABLED == "yes" )
      ignore_errors: True
      tags:
        - raspi-config-wifi
        - raspi-config

    - name: Set GPU memory split {{ MEMSPLIT }}
      command: "raspi-config nonint do_memory_split {{ MEMSPLIT }}"
      notify: reboot
      when: lookup('pipe','raspi-config nonint get_config_var gpu_mem /boot/config.txt') != MEMSPLIT
      tags:
        - raspi-config

    - name: Get audio output
      command: amixer contents
      become_user: pi
      register: audiooutput
      changed_when: False
      tags:
        - raspi-config-audio
        - raspi-config

    - name: Get HDMI or Headphone
      shell: if [ "{{ AUDIOOUT }}" == "Headphone" ]; then echo 1; else echo 0; fi
      args:
        executable: /bin/bash
      register: AUDIOOUTNUM
      changed_when: False
      when: not audiooutput.stdout is search(AUDIOOUT)
      tags:
        - raspi-config-audio
        - raspi-config

    - name: Set audio out
      command: "raspi-config nonint do_audio {{ AUDIOOUTNUM.stdout }}"
      when: not audiooutput.stdout is search(AUDIOOUT)
      tags:
        - raspi-config-audio
        - raspi-config

    - name: Disable 4K 60fps
      command: "raspi-config nonint do_pi4video V3"
      when: lookup('pipe','raspi-config nonint get_pi4video') != "0"
      tags:
        - raspi-config-pi4video
        - raspi-config

    - name: Set HDMI group mode
      command: "raspi-config nonint do_resolution {{ HDMI_GROUP }} {{ HDMI_MOD }}"
      when: ( lookup('pipe','raspi-config nonint get_config_var hdmi_group /boot/config.txt') != "1" ) or
            ( lookup('pipe','raspi-config nonint get_config_var hdmi_mode /boot/config.txt') != "34" )
      tags:
        - raspi-config

    - name: Set HDMI audio
      lineinfile:
        path: /boot/config.txt
        regexp: "^#?hdmi_drive=."
        line: 'hdmi_drive=2'
        state: present
      notify: reboot
      tags:
        - raspi-config

    - name: Set Real Clock
      lineinfile:
        path: /boot/config.txt
        insertafter: '^#[all]'
        line: 'nohz=off'
        state: present
      notify: reboot
      tags:
        - raspi-config

    - name: Install CPU opts
      apt:
        pkg:
        - cpufrequtils
      tags:
        - optimizations

    - name: Set CPU performance
      lineinfile:
        path: /etc/default/cpufrequtils
        create: yes
        state: present
        line: 'GOVERNOR="performance"'
      notify: restart-cpufreq
      tags:
        - optimizations

    - name: Tweaking Console
      lineinfile:
        path: /boot/cmdline.txt
        backrefs: true
        regexp: '^(.*rootwait.*)'
        line: '\1 vt.global_cursor_default=0 consoleblank=0'
      notify: reboot
      tags:
        - customizations

    - name: Disable dmesg console messages
      lineinfile:
        path: /etc/rc.local
        insertbefore: '^exit 0'
        line: 'dmesg --console-off'
        regexp: "^#?dmesg.--console-off$"
        state: present
      notify: reboot
      tags:
        - customizations

    - name: Blank Console
      lineinfile:
        path: /etc/rc.local
        insertbefore: '^exit 0'
        line: '/usr/local/bin/clear-tty.sh &'
        regexp: "^#?\/usr\/local\/bin\/clear-tty.sh.&$"
        state: present
      notify: reboot
      tags:
        - customizations

    - name: Blank Console script
      copy:
        dest: /usr/local/bin/clear-tty.sh
        group: root
        owner: root
        mode: 0755
        content: |
          #!/bin/bash
          #

          sleep 10
          /usr/bin/clear > /dev/tty1
          exit 0
      tags:
        - customizations

    - name: Install OMX Player
      apt:
        pkg:
          - omxplayer
      tags:
        - omx

    - name: Download OMXD
      git:
        repo: https://github.com/subogero/omxd.git
        dest: /usr/local/src/omxd
      register: omxdgit
      tags:
        - omx-git
        - omx

    - name: OMXD make clean
      make:
        chdir: /usr/local/src/omxd
        target: clean
      when: omxdgit.remote_url_changed is defined and omxdgit.remote_url_changed
      tags:
        - omx-git
        - omx

    - name: OMXD compile
      make:
        chdir: /usr/local/src/omxd
      register: omxdmake
      tags:
        - omx

    - name: OMXD install
      make:
        chdir: /usr/local/src/omxd
        target: install
      when: omxdmake.changed
      tags:
        - omx

    - name: OMXD start
      make:
        chdir: /usr/local/src/omxd
        target: start
      when: omxdmake.changed
      notify: restart-omxd
      tags:
        - omx

    - name: Autostart OMXD
      systemd:
        name: omxd
        enabled: yes
      tags:
        - omx

    - name: Autostart alsa-utils
      systemd:
        name: alsa-utils
        enabled: yes
      tags:
        - music-alsa

    - name: Get Headphone volume settings
      become_user: pi
      shell: amixer scontents | grep -Po \\[-?\\d+\\.\\d+dB\\]\\s+\\[o\(n\|f\)
      args:
        executable: /bin/bash
      register: amixervolume
      changed_when: false
      tags:
        - music-alsa

    - name: Set Headphones output
      become_user: pi
      command: amixer set Headphone,0 0dB unmute
      when: amixervolume.stdout != '[0.00dB] [on'
      tags:
        - music-alsa

    - name: Save Alsa state
      command: alsactl store
      when: amixervolume.stdout != '[0.00dB] [on'
      tags:
        - music-alsa

    - name: Install Music Player Daemon and Client
      apt:
        install_recommends: yes
        pkg:
          - mpd
          - mpc
      tags:
        - music-mpd

    - name: Add the user mpd to audio group
      user:
        name: mpd
        groups: audio
        append: yes
      notify: restartmpd
      tags:
        - music-mpd

    - name: Configure MPD
      lineinfile:
          path: /etc/mpd.conf
          state: present
          regexp: "{{ item.regexp }}"
          line: "{{ item.line }}"
      with_items:
          - { regexp: '^#?group\s+\"(nogroup|audio)\"$', line: 'group "audio"' }
          - { regexp: '^#?bind_to_address\s+\"(any|localhost)\"$', line: 'bind_to_address "any"' }
          - { regexp: '^#?bind_to_address\s+\"\S*\/run\/mpd\/socket\"$', line: 'bind_to_address "/var/run/mpd/socket"' }
          - { regexp: '^#?music_directory.+".+"$', line: 'music_directory "/home/pi/Music"' }
          - { regexp: '^#?restore_paused.+\"(yes|no)\"$', line: 'restore_paused "yes"' }
          - { regexp: '^#?playlist_directory.+".+"$', line: 'playlist_directory "/home/pi/Music"' }
          - { regexp: '^#?auto_update\s+"yes"$', line: 'auto_update "yes"' }
      notify: restartmpd
      tags:
        - music-mpd

# ROBIN - Sigh.. I can't believe I can't do this better
#    - name: Configure MPD 3.5mm output
#      lineinfile:
#        path: /etc/mpd.conf
#        state: present
#        regexp: '^#?\s+device\s+"hw:[0-1],0"\s+#\soptional$'
#        line: '    device      "hw:1,0" # optional'
#      notify: restartmpd
#      tags:
#        - music

# ROBIN - Sigh.. I can't believe I can't do this better
    - name: ANSIBLE MANAGED BLOCK before
      lineinfile:
        path: /etc/mpd.conf
        state: present
        regexp: "^# An example of an {{ item.SOUND }} output:.*"
        line: "# An example of an {{ item.SOUND }} output: ANSIBLE MANAGED BLOCK"
      with_items:
          - { SOUND: 'ALSA' }
          - { SOUND: 'OSS' }
      tags:
        - music-mpd

# ROBIN - Sigh.. I can't believe I can't do this better
    - name: Software controlled Volume
      blockinfile:
        path: /etc/mpd.conf
        marker_begin: 'An example of an ALSA output:'
        marker_end: 'An example of an OSS output:'
        block: |
            audio_output {
                type        "alsa"
                name        "Headphone Output"
                device      "hw:1,0"
                mixer_type  "software"
            }
      notify: restartmpd
      tags:
        - music-mpd

    - name: MPD on boot
      systemd:
        name: mpd
        enabled: yes
      tags:
        - music-mpd
          
    - name: Install Imagemagick for backgrounds
      apt:
        install_recommends: yes
        pkg:
        - imagemagick
      tags:
        - background

    - name: Companion DB directory
      file:
        path: /var/local/companion/undefined/companion/
        state: directory
        mode: 0755
        group: root
        owner: root
      tags:
        - companion-db
        - companion

    - name: Check for Companion config
      stat:
        path: /var/local/companion/undefined/companion/config
      register: companionconfig
      changed_when: False
      tags:
        - companion-config
        - companion

    - name: Companion config
      copy:
        dest: /var/local/companion/undefined/companion/config
        mode: '0644'
        content: |
          {"http_port":8000,"bind_ip":"0.0.0.0","start_minimised":false}
      when: not companionconfig.stat.exists
      tags:
        - companion-config
        - companion

    - name: Gather facts on listening ports
      listen_ports_facts:
      tags:
        - companion-process
        - companion

    - name: Check Companion TCP port 8000
      set_fact:
          companionIP: "{{ ansible_facts.tcp_listen | selectattr('port', 'match', '8000' ) | map(attribute='address') | list }}"
      tags:
          - companion-process
    
    - name: Check if companion is running
      wait_for:
          port: 8000
          host: "{{ ansible_facts.tcp_listen | selectattr('port', 'match', '8000' ) | map(attribute='address') | list | first }}"
          delay: 0
          timeout: 3
      register: port_check
      when: companionIP|length > 0
      ignore_errors: yes
      tags:
        - companion-process
        - companion

    - name: Companion Backup
      become: False
      uri:
        url: http://{{ ansible_facts.tcp_listen | selectattr('port', 'match', '8000' ) | map(attribute='address') | list | first }}:8000/int/full_export
        body_format: json
        method: GET
        dest: "/home/pi/{{ansible_hostname}}_full-config_{{ansible_date_time.year}}{{ansible_date_time.month}}{{ansible_date_time.day}}-{{ansible_date_time.hour}}{{ansible_date_time.minute}}.companionconfig"
        headers:
          Content-Type: application/json
          Accept: application/json
      register: backup
      when: port_check.state == "started"
      tags:
        - companion-process
        - companion

    - name: Companion Backup
      get_url:
          url: "http://{{ ansible_facts.tcp_listen | selectattr('port', 'match', '8000' ) | map(attribute='address') | list | first }}:8000/int/full_export"
          dest: /var/local/companion/undefined/companion/db
          backup: yes
          force: yes
          headers:
              Content-Type: application/json
              Accept: application/json
      tags:
        - companion-process
        - companion

    - name: Companion Dependencies
      apt:
        install_recommends: yes
        pkg:
        - libgusb-dev
        - nodejs
        - git
        - build-essential
        - cmake
        - libudev-dev
        - libusb-1.0-0-dev
        - npm
      tags:
        - companion

    - name: Companion USB permissions
      copy:
        dest: /etc/udev/rules.d/50-companion.rules
        group: root
        owner: root
        mode: '0644'
        content: |
          SUBSYSTEM=="input", GROUP="input", MODE="0666"
          SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0060", MODE:="666", GROUP="plugdev"
          KERNEL=="hidraw", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0060", MODE:="666", GROUP="plugdev"
          SUBSYSTEM=="usb", ATTRS{idVendor}=="ffff", ATTRS{idProduct}=="1f40", MODE:="666", GROUP="plugdev"
          KERNEL=="hidraw", ATTRS{idVendor}=="ffff", ATTRS{idProduct}=="1f40", MODE:="666", GROUP="plugdev"
          SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0063", MODE:="666", GROUP="plugdev"
          KERNEL=="hidraw", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="0063", MODE:="666", GROUP="plugdev"
          SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006c", MODE:="666", GROUP="plugdev"
          KERNEL=="hidraw", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006c", MODE:="666", GROUP="plugdev"
          SUBSYSTEM=="usb", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006d", MODE:="666", GROUP="plugdev"
          KERNEL=="hidraw", ATTRS{idVendor}=="0fd9", ATTRS{idProduct}=="006d", MODE:="666", GROUP="plugdev"
          SUBSYSTEM=="usb", ATTRS{idVendor}=="ffff", ATTRS{idProduct}=="1f41", MODE:="666", GROUP="plugdev"
          KERNEL=="hidraw", ATTRS{idVendor}=="ffff", ATTRS{idProduct}=="1f41", MODE:="666", GROUP="plugdev"
      notify: restart-companion
      register: companionusb
      tags:
        - companion-usb

    - name: Reload USB rules
      command: udevadm control --reload-rules
      when: companionusb.changed
      tags:
        - companion-usb
     
    - name: n node.js package
      npm:
        name: n
        global: yes
      tags:
        - companion-n
        - companion

    - name: Checking n version 8.17.0
      command: "n list"
      register: nodeversion
      changed_when: False
      tags:
        - companion-n
        - companion

    - name: Remove incompatible n version
      command: "n rm {{ item }}"
      with_items:
        - "{{ nodeversion.stdout_lines }}"
      when: nodeversion.stdout != 'node/8.17.0'
      tags:
        - companion-n
        - companion

    - name: Install node 8.17.0
      command: n 8.17.0
      when: nodeversion.stdout != 'node/8.17.0'
      tags:
        - companion
        - companion-n

    - name: yarn node.js package
      npm:
        name: yarn
        global: yes
      tags:
        - companion-yarn
        - companion

    - name: clone companion github
      git:
        repo: https://github.com/bitfocus/companion.git
        dest: /usr/local/src/companion
        force: yes
        recursive: no
        track_submodules: no
      register: companiongit
      changed_when: ( companiongit.remote_url_changed is not defined or companiongit.remote_url_changed ) 
      tags:
        - companion-git
        - companion

    - name: Update companion modules - takes time....
      command:
        cmd: yarn update
        chdir: /usr/local/src/companion
      environment:
        PATH: $HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:{{ ansible_env.PATH }}
      tags:
        - companion-git
        - companion
        - companion-update

    - name: Build writefile
      command: 
        cmd: tools/build_writefile.sh
        chdir: /usr/local/src/companion
      environment:
        PATH: $HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:{{ ansible_env.PATH }}
      notify: restart-companion
      tags:
        - companion-update
        - companion

    - name: Companion UNIT file
      copy:
        dest: /etc/systemd/system/companion.service
        group: root
        owner: root
        mode: '0644'
        content: |
          [Unit]
          Description=Bitfocus Companion (v2.0.0)
          After=network-online.target
          Wants=network-online.target

          [Service]
          Type=simple
          WorkingDirectory=/var/local/companion
          ExecStart=node /usr/local/src/companion/headless_ip.js 0.0.0.0
          Restart=on-failure
          KillSignal=SIGINT
          TimeoutStopSec=60

          [Install]
          WantedBy=multi-user.target
      notify: restart-companion
      tags:
        - companion-unitfile
        - companion

    - name: Autostart Companion
      systemd:
        name: companion
        enabled: yes
      tags:
        - companion-db
        - companion-config
        - companion

    - name: Install Fileshare
      apt:
        install_recommends: yes
        pkg:
        - samba
        - samba-common-bin
        - avahi-daemon
      tags:
         - filesharing

    - name: Avahi Configs
      copy:
        dest: /etc/avahi/services/samba.service
        group: root
        owner: root
        mode: 0644
        content: |
            <?xml version="1.0" standalone='no'?><!--*-nxml-*-->
            <!DOCTYPE service-group SYSTEM "avahi-service.dtd">
            <service-group>
              <name replace-wildcards="yes">%h</name>
              <service>
                <type>_smb._tcp</type>
                <port>445</port>
              </service>
              <service>
                <type>_device-info._tcp</type>
                <port>0</port>
                <txt-record>model=RackMac</txt-record>
              </service>
            </service-group>
      notify: restart-avahi
      tags:
          - filesharing

    - name: Start Avahi
      systemd:
        name: avahi-daemon
        enabled: yes
      tags:
         - filesharing

    - name: Configure Filesharing
      ini_file:
          path: /etc/samba/smb.conf
          section: "{{ item.section }}"
          option: "{{ item.option }}"
          value: "{{ item.value }}"
      with_items:
          - { section: "global", option: "min protocol", value: "SMB2" }
          - { section: "global", option: "max protocol", value: "SMB3" }
          - { section: "global", option: "ea support", value: "yes" }
          - { section: "global", option: "vfs objects", value: "catia fruit streams_xattr" }
          - { section: "global", option: "fruit:metadata", value: "stream" }
          - { section: "global", option: "fruit:model", value: "MacSamba" }
          - { section: "global", option: "fruit:veto_appledouble", value: "no" }
          - { section: "global", option: "fruit:posix_rename", value: "yes" }
          - { section: "global", option: "fruit:zero_file_id", value: "yes" }
          - { section: "global", option: "fruit:wipe_intentionally_left_blank_rfork", value: "yes" }
          - { section: "global", option: "fruit:delete_empty_adfiles", value: "yes" }
          - { section: "homes", option: "read only", value: "no" }
      notify: restart-fileshare
      tags:
         - filesharing

    - name: Configure Samba users
      shell: >
          (pdbedit --user={{ PIUSER }} 2>&1 > /dev/null)
          || (echo '{{ PIPASSWORD }}'; echo '{{ PIPASSWORD }}')
          | smbpasswd -s -a {{ PIUSER }}
      register: smbpasswd
      changed_when: "'Added user' in smbpasswd.stdout"
      tags:
         - filesharing

    - name: Start Fileshare
      systemd:
        name: smbd
        enabled: yes
      tags:
         - filesharing

    - name: Convenient Tools
      apt:
        install_recommends: yes
        pkg:
        - vim
        - bash-completion
        - jq
        - speedtest-cli
        - telnet
        - netcat
        - nmap
        - tcpdump
        - tmux
        - screen
      tags:
        - userland

    - name: .hushlogin
      become: False
      copy:
        content: ""
        dest: /home/pi/.hushlogin
        force: no
        group: pi
        owner: pi
        mode: 0644
      tags:
        - userland-hush
        - userland

    - name: Alias vi to vim
      copy:
        dest: /etc/profile.d/vim.sh
        group: root
        owner: root
        mode: '0644'
        content: |
          alias vi=vim
      tags:
        - userland-vim
        - userland

    - name: pull vimrc from git
      become: False
      git:
        repo: https://github.com/amix/vimrc.git
        dest: /home/pi/.vim_runtime
        force: yes
      register: vimrcgit
      changed_when: ( vimrcgit.remote_url_changed is not defined or vimrcgit.remote_url_changed ) 
      tags:
        - userland-vim
        - userland

    - name: activate vimrc
      become: False
      command:
        chdir: /home/pi
        cmd: /home/pi/.vim_runtime/install_awesome_vimrc.sh
        creates: /home/pi/.vimrc
      tags:
        - userland-vim
        - userland

    - name: pull vim plugin for yml
      become: False
      git:
        repo: https://github.com/pearofducks/ansible-vim.git
        dest: /home/pi/.vim_runtime/my_plugins/ansible-vim
        update: yes
        version: master
      register: vimymlgit
      tags:
        - userland-vim
        - userland

    - name: Vim Python tools
      apt:
        install_recommends: yes
        pkg:
        - python-requests
      tags:
        - userland-vim
        - userland

    - name: update vim plugins
      become: False
      command:
        cmd: python update_plugins.py
        chdir: /home/pi/.vim_runtime
      when: ( vimrcgit.remote_url_changed is not defined or vimrcgit.remote_url_changed ) or
            ( vimymlgit.remote_url_changed is not defined or vimymlgit.remote_url_changed )
      tags:
        - userland-vim
        - userland

